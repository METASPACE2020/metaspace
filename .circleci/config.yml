version: 2
jobs:
  # TODO: Monorepo support - only run tests on projects if they have changed
  # e.g. https://discuss.circleci.com/t/does-circleci-2-0-work-with-monorepos/10378/14

  test-graphql:
    docker:
      - image: metaspace2020/sm-webapp:0.11

      - image: postgres:9.5-alpine
        environment:
          POSTGRES_USER: sm
          POSTGRES_PASSWORD: password

    working_directory: ~/metaspace/metaspace/graphql
    steps:
      - checkout:
          path: ~/metaspace
      - run:
          name: Clean git repository
          command: |
            # This is a workaround for the old git version in this image not correctly resetting ignored-but-committed
            # files (mainly files in the config directories) when switching branches.
            git clean -fdX
            git checkout -- ~/metaspace
      - restore_cache:
          keys:
            - graphql-yarn-cache-{{checksum "yarn.lock"}}
      - run:
          name: Install npm packages
          command: |
            yarn install --frozen-lockfile
            yarn global add codecov
      - save_cache:
          key: graphql-yarn-cache-{{checksum "yarn.lock"}}
          paths:
            - ~/metaspace/metaspace/graphql/node_modules
            - /usr/local/share/.cache/yarn
      - run:
          name: Run tests
          command: |
            mkdir -p /opt/data/metaspace/public/
            psql -h localhost -U sm -c "CREATE ROLE postgres WITH LOGIN SUPERUSER PASSWORD 'postgres'"
            psql -h localhost -U sm -c "CREATE DATABASE sm_test owner sm"
            psql -h localhost -U sm -d sm_test -c "CREATE EXTENSION \"uuid-ossp\";"
            psql -h localhost -U sm -d sm_test -c "CREATE SCHEMA graphql;"
            yarn run gen-binding
            yarn run deref-schema
            NODE_ENV=test yarn run test-ci --verbose --detectOpenHandles --forceExit --coverage
      - run:
          name: Upload coverage
          command: npx codecov -p ../.. -F graphql
      - run:
          name: Lint code
          when: always
          command: yarn run lint --max-warnings 0


  generate-graphql-schema:
    docker:
      - image: metaspace2020/sm-webapp:0.11

      - image: postgres:9.5-alpine
        environment:
          POSTGRES_USER: sm
          POSTGRES_PASSWORD: password

    working_directory: ~/metaspace/metaspace/graphql
    steps:
      - checkout:
          path: ~/metaspace
      - run:
          name: Clean git repository
          command: |
            # This is a workaround for the old git version in this image not correctly resetting ignored-but-committed
            # files (mainly files in the config directories) when switching branches.
            git clean -fdX
            git checkout -- ~/metaspace
      - restore_cache:
          keys:
            - graphql-yarn-cache-{{checksum "yarn.lock"}}
      - run:
          name: Install npm packages
          command: |
            yarn install --frozen-lockfile
      - save_cache:
          key: graphql-yarn-cache-{{checksum "yarn.lock"}}
          paths:
            - ~/metaspace/metaspace/graphql/node_modules
            - /usr/local/share/.cache/yarn
      - run:
          name: Generate graphql JSON schema
          command: |
            mkdir -p dist
            node ./bin/generate-json-graphql-schema.js ./dist/graphql-schema.json
      - run:
          name: Dump GraphQL and SQL schema
          command: |
            psql -h localhost -U sm -c "CREATE ROLE postgres WITH LOGIN SUPERUSER PASSWORD 'postgres'"
            psql -h localhost -U sm -c "CREATE DATABASE sm_test owner sm"
            yarn run gen-binding
            NODE_CONFIG_ENV=test yarn run gen-sql-schema
      - run:
          name: Assert SQL schema doesn't have uncommitted changes
          command: git diff --exit-code ../engine/scripts/db_schema.sql
      - persist_to_workspace:
          root: dist
          paths:
            - graphql-schema.json

  test-webapp:
    docker:
      - image: metaspace2020/sm-webapp:0.12

    working_directory: ~/metaspace/metaspace/webapp
    steps:
      - checkout:
          path: ~/metaspace
      - run:
          name: Clean git repository
          command: |
            # This is a workaround for the old git version in this image not correctly resetting ignored-but-committed
            # files (mainly files in the config directories) when switching branches.
            git clean -fdX
            git checkout -- ~/metaspace
      - restore_cache:
          keys:
            - webapp-yarn-cache-{{checksum "yarn.lock"}}
      - run:
          name: Install npm packages
          command: |
            yarn install --frozen-lockfile
            yarn global add codecov
      - save_cache:
          key: webapp-yarn-cache-{{checksum "yarn.lock"}}
          paths:
            - ~/metaspace/metaspace/webapp/node_modules
            - /usr/local/share/.cache/yarn
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Copy configs
          command: |
            cp ci/clientConfig.json src/
      - run:
          name: Generate metadata schema
          command: |
            yarn run deref-schema
      - run:
          name: Lint code
          when: always
          command: yarn run lint --max-warnings 0 --no-fix
      - run:
          name: Prettier code style check
          when: always
          command: yarn run format-check
      - run:
          name: Run tests
          command: |
            yarn run test-ci --mode CI --coverage
      - run:
          name: Upload coverage
          command: |
            npx codecov -p ../.. -F webapp
      - run:
          name: Test compilation
          command: |
            yarn run build-ci

  test-webapp-e2e:
    docker:
      - image: metaspace2020/sm-webapp:0.11

      - image: postgres:9.5-alpine
        environment:
          POSTGRES_USER: sm
          POSTGRES_PASSWORD: password

      - image: elasticsearch:8.7.1
        environment:
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
          xpack.security.enabled: "false"
        command: [elasticsearch, -Etransport.host=127.0.0.1]

      - image: redis:3.2-alpine

      - image: rabbitmq:3.6-alpine
        environment:
          RABBITMQ_DEFAULT_USER: sm
          RABBITMQ_DEFAULT_PASS: password

    working_directory: ~/metaspace/metaspace/webapp
    steps:
      - checkout:
          path: ~/metaspace
      - restore_cache:
          keys:
            - yarn-cache-{{checksum "yarn.lock"}}-{{checksum "../graphql/yarn.lock"}}
            - yarn-cache
      - run:
          name: Install npm packages
          command: |
            yarn install
            npm rebuild node-sass  # https://github.com/sass/node-sass/issues/1804
            cd ../graphql
            yarn install
      - save_cache:
          key: yarn-cache-{{checksum "yarn.lock"}}-{{checksum "../graphql/yarn.lock"}}
          paths:
            - ~/metaspace/metaspace/webapp/node_modules
            - /usr/local/share/.cache/yarn
      - run:
          name: Build webapp
          command: |
            cp ci/clientConfig.json src/
            yarn run build-ci
      - run:
          name: Start GraphQL server and service mocks
          command: |
            export NPM_CONFIG_LOGLEVEL=warn
            cd ../graphql
            yarn run deref-schema
            forever start -e api_mocks.err.log tests/api_mocks.js
            forever start -o sm-graphql.out.log -e sm-graphql.err.log server.js
      - run:
          name: Load test data into the database and ElasticSearch
          command: |
            cd ci
            bash populate_pg_es.sh
      - run:
          name: Run tests
          command: |
            export NPM_CONFIG_LOGLEVEL=warn
            #while true; do echo '---'; sleep 5; done   # uncomment this line for debugging
            stty cols 80  # https://github.com/DevExpress/testcafe/issues/1469
            yarn run test-e2e

  test-pycode-format:
    docker:
      - image: metaspace2020/sm-engine:2.0.0
    working_directory: ~/metaspace
    steps:
      - checkout:
          path: ~/metaspace
      - run:
          name: Clean git repository
          command: |
            # This is a workaround for the old git version in this image not correctly resetting ignored-but-committed
            # files (mainly files in the config directories) when switching branches.
            git clean -fdX
            git checkout -- ~/metaspace
      - run:
          name: Install dependencies
          command: |
            pip install -r metaspace/engine/requirements-dev.txt
      - run:
          name: Code format check for .py files in ansible and metaspace directories
          command: |
            black --check ansible metaspace/off-sample metaspace/python-client

  test-engine:
    docker:
      - image: metaspace2020/sm-engine:2.0.0

      - image: redis:5.0.3

      - image: postgres:9.5-alpine
        environment:
          POSTGRES_USER: sm
          POSTGRES_PASSWORD: password

      - image: elasticsearch:8.7.1
        environment:
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
          xpack.security.enabled: "false"
        command: [elasticsearch, -Etransport.host=127.0.0.1]

      - image: rabbitmq:3.6-management
        environment:
          RABBITMQ_DEFAULT_USER: sm
          RABBITMQ_DEFAULT_PASS: password

      - image: minio/minio:RELEASE.2021-01-16T02-19-44Z
        entrypoint: sh
        command: -c 'mkdir -p /data/sm-engine-upload && mkdir -p /data/sm-imzml-browser-test && mkdir -p /data/sm-lithops-test && /usr/bin/minio server /data'

    working_directory: ~/metaspace/metaspace/engine
    steps:
      - checkout:
          path: ~/metaspace
      - run:
          name: Clean git repository
          command: |
            # This is a workaround for the old git version in this image not correctly resetting ignored-but-committed
            # files (mainly files in the config directories) when switching branches.
            git clean -fdX
            git checkout -- ~/metaspace
      - run:
          name: Test engine dependencies
          command: |
            pip install --upgrade -r requirements.txt -r requirements-dev.txt
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Run unit and integration tests
          command: |
            #while true; do echo '---'; sleep 5; done   # uncomment this line for debugging
            coverage run --source=./sm/engine --omit=./sm/engine/tests/*,./tests/* \
            -m pytest --tb=short sm/engine/tests tests
      - run:
          name: Upload test coverage
          command: |
            #while true; do echo '---'; sleep 5; done   # uncomment this line for debugging
            codecov --root ../.. -F engine
      - run:
          name: Run linter
          # Limit number of CPUs to prevent silent OOMs in background processes
          # https://github.com/PyCQA/pylint/issues/3899
          command: |
            pylint --version
            pylint -j1 sm scripts
      - run:
         name: Run code formatter
         command: black --check .

  test-engine-sci:
    # parallelism: 4  # Uncomment to run all combinations of --analysis-version & --lithops
    resource_class: large  # Needed when using --lithops. Optional but faster with Spark
    docker:
      - image: metaspace2020/sm-engine:2.0.0

      - image: redis:5.0.3

      - image: postgres:9.5-alpine
        environment:
          POSTGRES_USER: sm
          POSTGRES_PASSWORD: password

      - image: elasticsearch:8.7.1
        environment:
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
          xpack.security.enabled: "false"
        command: [elasticsearch, -Etransport.host=127.0.0.1]

      - image: rabbitmq:3.6-management
        environment:
          RABBITMQ_DEFAULT_USER: sm
          RABBITMQ_DEFAULT_PASS: password

      - image: minio/minio:RELEASE.2021-01-16T02-19-44Z
        entrypoint: sh
        command: -c 'mkdir -p /data/sm-image-storage-sci-test && /usr/bin/minio server /data'

    working_directory: ~/metaspace/metaspace/engine
    steps:
      - checkout:
          path: ~/metaspace
      - run:
          name: Clean git repository
          command: |
            # This is a workaround for the old git version in this image not correctly resetting ignored-but-committed
            # files (mainly files in the config directories) when switching branches.
            git clean -fdX
            git checkout -- ~/metaspace
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Test setup
          command: |
            pip install --upgrade -r requirements.txt -r requirements-dev.txt
            pip install -e .
      - run:
          name: Run scientific test
          command: |
            # Select parameters based on which parallel run this is.
            # If parallelism is commented out, $CIRCLE_NODE_INDEX == 0
            # $CIRCLE_NODE_INDEX is 0-based, so the "first" run (or default if
            # not using parallelism) is 0, matching the *) case
            case $CIRCLE_NODE_INDEX in
              1) PARAMS="--analysis-version=3 --lithops" ;;
              2) PARAMS="--analysis-version=1" ;;
              3) PARAMS="--analysis-version=1 --lithops" ;;
              *) PARAMS="--analysis-version=3" ;;
            esac
            echo $PARAMS

            # Add current directory to the PYTHONPATH. Without this, Python can't find the sm.engine module,
            # even though it should be installed via egg-link.
            export PYTHONPATH="$PYTHONPATH:`pwd`"
            python tests/sci_test/spheroid.py --database cm3 $PARAMS

workflows:
  version: 2
  commit:
    jobs:
      - generate-graphql-schema
      - test-pycode-format
      - test-engine:
          requires:
            - generate-graphql-schema
#      - test-engine-sci  # uncomment for debugging
      - test-graphql
      - test-webapp:
          requires:
            - generate-graphql-schema

## sci-test on demand is currently failing as it either uses more RAM than CircleCI allows, or takes >15 minutes if
## parallelism is reduced to minimize memory usage.
## Re-test after https://github.com/metaspace2020/metaspace/issues/763 has been addressed
#
  sci-test-on-demand:
    jobs:
      - generate-graphql-schema
      - test-engine-sci:
          requires:
            - generate-graphql-schema
          filters:
            branches:
              only:
                - master
                # Add additional branches to run sci-test against here. Clean up old branches if you notice any.
                - feat/fix_sci_test


## Disabled until we have time to redo these tests
#  daily:
#    jobs:
#      - test-webapp-e2e
#    triggers:
#      - schedule:
#          cron: "0 11 * * 1-5"
#          filters:
#            branches:
#              only:
#                - master
#                - feature/.*
#  weekly:
#    jobs:
#      - generate-graphql-schema
#      - test-engine-sci
#    triggers:
#      - schedule:
#          cron: "0 11 * * 1"
#          filters:
#            branches:
#              only:
#                - master
#
