type Plan {
    id: Int!
    name: String!
    isActive: Boolean
    createdAt: String!
}

input PlanInput {
    name: String
    isActive: Boolean
    createdAt: String
}

type PlanRule {
    id: Int!
    planId: Int!
    actionType: String!
    period: Int!
    periodType: String!
    limit: Int!
    createdAt: String!
}

type ApiUsage {
    id: Int!
    userId: String!
    datasetId: String!
    actionType: String!
    datasetType: String!
    source: String!
    actionDt: String!
}



type Query {
    allPlans: [Plan]
    allPlanRules(planId: Int) : [PlanRule]
    allApiUsages(termId: Int) : [String]
}

type Mutation {
    createPlan(name: String!, isActive: Boolean!): Plan!
    updatePlan(planId: Int!, name: String!, isActive: Boolean!): Plan!

    createPlanRule(planId: Int!, actionType: String!, period: Int!, periodType: String!, limit: Int!): PlanRule!
    updatePlanRule(planRuleId: Int!, actionType: String!, period: Int!, periodType: String!, limit: Int!): PlanRule!
    deletePlanRule(planRuleId: Int!): Boolean!

    createApiUsage(userId: String!, datasetId: String!, actionType: String!, datasetType: String!,
        requestSource: String): ApiUsage!
}
